@model HDFCMSILWebMVC.Models.UploadInvoiceReceived
@using Newtonsoft.Json

@{
    ViewBag.Title = "Upload Received Invoice Data";

    Layout = "~/Views/Shared/_Layout.cshtml";
}


<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Google Font: Source Sans Pro -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="~/plugins/fontawesome-free/css/all.min.css">
    <!-- daterange picker -->
    <link rel="stylesheet" href="~/plugins/daterangepicker/daterangepicker.css">
    <!-- iCheck for checkboxes and radio inputs -->
    <link rel="stylesheet" href="~/plugins/icheck-bootstrap/icheck-bootstrap.min.css">
    <!-- Bootstrap Color Picker -->
    <link rel="stylesheet" href="~/plugins/bootstrap-colorpicker/css/bootstrap-colorpicker.min.css">
    <!-- Tempusdominus Bootstrap 4 -->
    <link rel="stylesheet" href="~/plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css">
    <!-- Select2 -->
    <link rel="stylesheet" href="~/plugins/select2/css/select2.min.css">
    <link rel="stylesheet" href="~/plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css">
    <!-- Bootstrap4 Duallistbox -->
    <link rel="stylesheet" href="~/plugins/bootstrap4-duallistbox/bootstrap-duallistbox.min.css">
    <!-- BS Stepper -->
    <link rel="stylesheet" href="~/plugins/bs-stepper/css/bs-stepper.min.css">
    <!-- dropzonejs -->
    <link rel="stylesheet" href="~/plugins/dropzone/min/dropzone.min.css">
    <!-- Theme style -->
    <!-- Theme style -->
    <link rel="stylesheet" href="~/dist/css/adminlte.min.css">
    <script src="~/js/signalr.min.js"></script>

</head>
<div class="content-wrapper">

    <!-- general form elements disabled -->
    <div class="card card-warning">
        <div class="card-header">
            <h1 class="card-title">Upload Received Invoice Data</h1>
        </div>
        <!-- /.card-header -->
        <div class="card-body">
            @using (Html.BeginForm("", "", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @*<div class="progress">
                        <div id="progressBar" class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>
                    </div>*@

                <div id="progressDiv" style="display:none">
                    <div class="progress">
                        <div id="progressBar" class="progress-bar bg-primary progress-bar-striped" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%">
                            <span class="sr-only">0% Complete</span>
                        </div>
                    </div>
                </div>


                // Display success message


                // Display error messages
                if (TempData["alertMessage"] != null)
                {
                    <div class="alert alert-success alert-dismissable">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                        @TempData["alertMessage"]
                    </div>

                    //var errorMessageJson = TempData["alertMessage"].ToString();
                    //var errorMessages = JsonConvert.DeserializeObject<List<string>>(errorMessageJson);

                    @*<div class="alert alert-danger alert-dismissable">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                            <ul>
                                @foreach (var message in errorMessages)
                                {
                                    <li>@message</li>
                                }
                            </ul>
                        </div>*@
                }
                @*@if (ViewBag.ProcessingMessages != null && ViewBag.ProcessingMessages.Count > 0)
                            {
                    <div class="processing-messages">
                        <h4>Processing Messages:</h4>
                        <ul>
                            @foreach (var message in ViewBag.ProcessingMessages)
                            {
                    <li>@message</li>}
                        </ul>
                    </div>*@
                //}
                <form id="uploadForm" method="post" enctype="multipart/form-data">

                    <div class="row">
                        <div class="col-sm-7">
                            <div class="form-group">
                                <label>Select Input File name :</label>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-10">
                            <div class="form-group">
                                <label asp-for="txtFile">File input</label>
                                <div class="input-group">
                                    <div class="custom-file">

                                        <div class="custom-file">
                                            <input asp-for="txtFile" class="form-control custom-file-input" id="txt_inputFile" onselect="success()" onchange="success()">
                                            <label class="custom-file-label" for="exampleInputFile">Choose file</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="row">
                        <div class="col-sm-10">
                            <div class="form-group">
                                <button type="submit" id="Submit" class="btn btn-app bg-success" disabled="disabled" asp-action="UploadDetails"><i class="fas fa-file-upload"></i>Upload</button>
                            </div>
                        </div>
                    </div>


                </form>


            }
        </div>
        <!-- /.card-body -->
    </div>
    <!-- /.card -->

</div>

<!-- jQuery -->
<script src="~/plugins/jquery/jquery.min.js"></script>
<!-- Bootstrap 4 -->
<script src="~/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<!-- Select2 -->
<script src="~/plugins/select2/js/select2.full.min.js"></script>
<!-- Bootstrap4 Duallistbox -->
<script src="~/plugins/bootstrap4-duallistbox/jquery.bootstrap-duallistbox.min.js"></script>
<!-- InputMask -->
<script src="~/plugins/moment/moment.min.js"></script>
<script src="~/plugins/inputmask/jquery.inputmask.min.js"></script>
<!-- date-range-picker -->
<script src="~/plugins/daterangepicker/daterangepicker.js"></script>
<!-- bootstrap color picker -->
<script src="~/plugins/bootstrap-colorpicker/js/bootstrap-colorpicker.min.js"></script>
<!-- Tempusdominus Bootstrap 4 -->
<script src="~/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
<!-- Bootstrap Switch -->
<script src="~/plugins/bootstrap-switch/js/bootstrap-switch.min.js"></script>
<!-- BS-Stepper -->
<script src="~/plugins/bs-stepper/js/bs-stepper.min.js"></script>
<!-- dropzonejs -->
<script src="~/plugins/dropzone/min/dropzone.min.js"></script>
<!-- bs-custom-file-input -->
<script src="~/plugins/bs-custom-file-input/bs-custom-file-input.min.js"></script>

<!-- AdminLTE App -->
<script src="~/dist/js/adminlte.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script src="~/js/signalr.min.js"></script>
<script src="~/js/uploadProgress.js"></script>

<script>
    $(function () {
        bsCustomFileInput.init();
    });

    function success() {
        if (document.getElementById("txt_inputFile").value === "" || document.getElementById("txt_inputFile").value === null) {
            document.getElementById('Submit').disabled = true;
        } else {
            document.getElementById('Submit').disabled = false;
        }
    }




</script>
@*<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/uploadProgressHub")
        .build();

    connection.start().then(() => {
        console.log("SignalR Connected.");
    }).catch(err => console.error(err.toString()));

    document.getElementById("uploadForm").addEventListener("submit", function (event) {
        event.preventDefault();

        const formData = new FormData(event.target);
        document.getElementById("submitBtn").disabled = true;

        fetch('/UploadReceivedInvoiceData/UploadDetails', {
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    console.log("File uploaded successfully.");
                } else {
                    console.error("File upload failed.");
                }
                document.getElementById("submitBtn").disabled = false;
            })
            .catch(error => {
                console.error("Error uploading file:", error);
                document.getElementById("submitBtn").disabled = false;
            });
    });

    connection.on("ReceiveProgress", function (progress) {
        const progressBar = document.getElementById("progressBar");
        progressBar.style.width = progress + "%";


    });
</script>*@

<script type="text/javascript">
    $(document).ready(function () {
        var connection = new signalR.HubConnectionBuilder().withUrl("/uploadProgressHub").build();

        connection.on("ReceiveProgressUpdate", function (progress, message) {
            $("#progressDiv").show();
            $("#progressBar").css("width", progress + "%").attr("aria-valuenow", progress).text( message);
        });

        connection.start().then(function () {
            console.log("SignalR connected.");
        }).catch(function (err) {
            return console.error(err.toString());
        });

        $("#uploadForm").submit(function (e) {
            e.preventDefault();

            var formData = new FormData(this);
            $.ajax({
                url: $(this).attr("action"),
                type: "POST",
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    window.location.href = response.redirectUrl;
                },
                error: function (response) {
                    alert("An error occurred while processing the file.");
                }
            });
        });
    });
</script>

}

