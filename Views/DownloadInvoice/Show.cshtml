@model IEnumerable<_001TN0172.Models.DownloadFillInvoice>
@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Google Font: Source Sans Pro -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="../../plugins/fontawesome-free/css/all.min.css">
    <!-- icheck bootstrap -->
    <link rel="stylesheet" href="../../plugins/icheck-bootstrap/icheck-bootstrap.min.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="../../dist/css/adminlte.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.3/css/jquery.dataTables.min.css">
    <script type="text/javascript">
        function selects() {
            var ele = document.getElementsByName('IsSelect');
            var count = 0;
            for (var i = 0; i < ele.length; i++) {
                if (ele[i].disabled  == false) {
                    if (ele[i].type == 'checkbox') {
                        ele[i].checked = true;
                        count = count + 1;
                    }
                }
            }            
            if (count == 0) {
                alert("No Data found to Select.");
                return false;
            }            
            countCheckboxes();
        }
        function deSelect() {
            var ele = document.getElementsByName('IsSelect');
            for (var i = 0; i < ele.length; i++) {
                if (ele[i].type == 'checkbox')
                    ele[i].checked = false;
            }
            countCheckboxes();
        }
        function countCheckboxes() {
            var countDisplay = document.getElementById('count'); // This is the <label> element
            var countInput = document.getElementById('countInput'); // Hidden input field
            var checkboxes = document.querySelectorAll('input[type="checkbox"]');
            var count = 0;

            // Iterate through checkboxes and count the checked ones that are not disabled
            for (var i = 0; i < checkboxes.length; i++) {
                if (checkboxes[i].checked && !checkboxes[i].disabled) {
                    count++;
                }
            }

            // Ensure the <label> element exists before trying to modify it
            if (countDisplay) {
                countDisplay.textContent = "Selected Count: " + count;
            } else {
                //console.error('Element with ID "count" not found.');
            }

            // Ensure the hidden input field exists before trying to modify it
            if (countInput) {
                countInput.value = count;
            } else {
                //console.error('Element with ID "countInput" not found.');
            }
        }

        // Set up event listeners when the DOM is fully loaded
        document.addEventListener('DOMContentLoaded', function () {
            var checkboxes = document.querySelectorAll('input[type="checkbox"]');
            for (var i = 0; i < checkboxes.length; i++) {
                checkboxes[i].addEventListener('change', countCheckboxes);
            }

            // Initial count update
            countCheckboxes();
        });

        //function countCheckboxes() {
        //    var countInput = document.getElementById('count');
        //    var checkboxes = document.querySelectorAll('input[type="checkbox"]');
        //    for (var i = 0; i < checkboxes.length; i++) {
        //        checkboxes[i].onchange = countCheckboxes;
        //    }
        //    var count = 0;
        //    for (var i = 0; i < checkboxes.length; i++) {
        //        if (checkboxes[i].checked && !checkboxes[i].disabled)
        //            count++;
        //    }
        //    document.getElementById('count').textContent = "Selected Count: " + count;
        //    countInput.value = count;
        //}
        countCheckboxes();
        //



    </script>


</head>
<div class="content-wrapper">
    @using (Html.BeginForm("Show", "DownloadInvoice", FormMethod.Post))
    {

        <!-- general form elements disabled -->
        <div class="card card-warning">
            <div class="card-header">
                <h1 class="card-title">Invoice Data</h1>
            </div>
            <p style="text-align:right;margin-right:20px;margin-top: 8px;">
                <div class="row">
                    @*<div class="col-sm-2">

        </div>
        <div class="col-sm-2">

        </div>
        <div class="col-sm-2">

        </div>
        <div class="col-sm-2">

        </div>*@
                    <div class="col-sm-2">
                        <label id="count" class="control-label">Selected Count : 0</label>
                    </div>
                    <input type="hidden" id="countInput" value="0">
                    <div class="col-sm-2">

                    </div>
                    <div class="col-sm-2">

                    </div>
                    <div class="col-sm-2">

                    </div>
                    @*<div class="col-sm-2">
        </div>*@
                    <div class="col-sm-4">
                        <a class="btn btn-primary" onclick='selects()'>Select All</a>
                        <a class="btn btn-primary" onclick='deSelect()'>De-Select All</a>


                        @*<a class="btn btn-primary" id="cambiarAreaE">Excel</a>*@
                        @*<button type="submit" class="btn btn-app bg-success" value="GenExcel" asp-action="GenExcel"><i class="fas fa-file-excel"></i>Excel</button>*@
                        <button type="submit" class="btn btn-primary" value="GenExcel" asp-action="GenExcel" onclick=" return validateForm()"><i class="fas fa-file-excel"></i>Excel</button>
                        @*<button id="cambiarAreaE">Click me</button>*@
                        <a class="btn btn-danger" asp-action="Index">Back</a>
                    </div>
                </div>
            </p>
            <!-- /.card-header -->
            @*<div class="container p-3 my-3 border">*@
            <div class="table-responsive">
                <table id="example" class="table table-striped">
                    @*class="table table-bordered"*@
                    <thead>
                        <tr>
                            <th>
                                @*<label class="control-label">Select</label>*@
                                @Html.DisplayNameFor(model => model.IsSelect)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Invoice_Number)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Invoice_Amount)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Currency)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Vehical_ID)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.DueDate)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Dealer_Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Dealer_Address1)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Dealer_City)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Transporter_Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Transport_Number)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Transport_Date)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Dealer_Code)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Transporter_Code)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Dealer_Address2)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Dealer_Address3)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Dealer_Address4)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.IMEX_DEAL_NUMBER)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.TradeOp_Selected_Invoice_Date)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Trade_OPs_Remarks)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @* Below is for if imex no is blank then only this is visible*@
                                    @*@if (item.IMEX_DEAL_NUMBER == null || item.IMEX_DEAL_NUMBER.Length == 0)*@
                                    <!--{-->
                                        @*@Html.CheckBoxFor(modelItem => item.IsSelect)*@
                                        <!--<input data-val="true" data-val-required="The isActive field is required." id="IsSelect" name="IsSelect" type="checkbox" value="@item.Invoice_Number" onclick="countCheckboxes()" />
                                        <input name="IsSelect" type="hidden" value="false" />
                                    }-->
                                    @*else
                                    {
                                        <input data-val="true" data-val-required="The isActive field is required." id="IsSelect" name="IsSelect" type="checkbox" disabled="disabled" value="@item.Invoice_Number" onclick="countCheckboxes()" />
                                    }*@ 



                                    <input data-val="true" data-val-required="The isActive field is required." id="IsSelect" name="IsSelect" type="checkbox" value="@item.Invoice_Number" onclick="countCheckboxes()" />
                                    @*<input type="checkbox" id="checkboxPrimary1" class="checkboxAlistados" style="width: 25px; height: 25px" value="@item.IsSelect">
        <label for="checkboxPrimary1"> </label>*@



                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Invoice_Number)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Invoice_Amount)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Currency)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Vehical_ID)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DueDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Dealer_Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Dealer_Address1)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Dealer_City)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Transporter_Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Transport_Number)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Transport_Date)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Dealer_Code)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Transporter_Code)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Dealer_Address2)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Dealer_Address3)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Dealer_Address4)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.IMEX_DEAL_NUMBER)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TradeOp_Selected_Invoice_Date)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Trade_OPs_Remarks)
                                </td>

                                <td></td>
                            </tr>
                        }
                    </tbody>
                </table>
                <script>
                            function validateForm() {
                                var count ='@Model.Count()';
                                if (count== 0 ) {
                                    alert("No Data found to download.");
                                    return false;
                                }
                                if (count == null) {
                                    alert("No Data found to download.");
                                    return false;
                                }

                                var countInput = document.getElementById('count');
                                var checkboxes = document.querySelectorAll('input[type="checkbox"]');

                                var countSelect = 0;
                                for (var i = 0; i < checkboxes.length; i++) {
                                    if (checkboxes[i].checked )
                                        countSelect++;
                                }
                                if (countSelect == 0) {
                                    alert("Please Select Data to Download.");
                                    return false;
                                }

                            }
                </script>
            </div>
        </div>
    }
</div>
<!-- jQuery -->
<script src="../../plugins/jquery/jquery.min.js"></script>
<!-- Bootstrap 4 -->
<script src="../../plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<!-- AdminLTE App -->
<script src="../../dist/js/adminlte.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>